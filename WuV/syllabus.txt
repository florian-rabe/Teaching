This is the syllabus of the ongoing 2022 course. The 2021 syllabus in a separate file.

\begin{tabular}
lecture 1,3 (Oct 19, 25) & introduction, overview and essential concepts & \\
exercise 1 (Oct 26) & in Protege: as a team design an ontology for a university knowledge management system\\
lecture 2,4 (Oct 20, & Ontologies: ontological knowledge, BOL, typed ontologies \\
exercise 2 (Nov 2) & continued: as a team (with tasks distributed) add ABox and axioms, do SPARQL query via Virtuoso, do logic query via FaCT++ \\
homework 2 & finish exercise 2 \\
lecture 5, 6 (Nov 3, 8) & implementing syntax and type checkers in various programming languages (see code in repository)\\
exercise 3 (Nov 9) & exercise 2 continued \\
homework 3 & implement syntax and type checker for BOL \\
lecture 7 (Nov 10) & context-sensitive syntax, type checking \\
lecture 8, 9 (Nov 15, 17) &  type systems \\
exercise 4 (Nov 16) & comparing BOL implementations \\
lecture 10, 11 (Nov 22, 24) & data \\
exercise 5 (Nov 23) & as a group, define an XML schema for BOL; individually extend your BOL implementations with importers/exporters \\
lecture 12 (Nov 29) & semantics \\
exercise 6 (Nov 30) & as a group, define primitive types and their string encodings; individually extend your BOL implementations and importer/exporters\\
lecture 13-15 (Dec 1, 6, 8) & SFOL and relative semantics BOL -> SFOL \\
exercise 7 (Dec 7) & implement SFOL and BOL -> SFOL\\
\end{tabular}

Tentative:
lecture 13-20 & BOL semantics by translation \\
lecture 21-22 & BOL absolute semantics \\
lecture 23-24 & semantics abstractly \\
lecture 25-26 & querying \\
lecture 27 & vocabulary morphisms \\
lecture 28-29 & languages abstractly \\
